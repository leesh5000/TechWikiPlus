name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: 127994096408.dkr.ecr.ap-northeast-2.amazonaws.com/techwikiplus/client

jobs:
  test-and-lint:
    name: Run Tests and Linter
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'apps/frontend/package-lock.json'
          
      - name: Install dependencies
        working-directory: apps/frontend
        run: npm ci
          
      - name: Run linter
        working-directory: apps/frontend
        run: npm run lint
        
      - name: Run tests
        working-directory: apps/frontend
        run: npm test -- --ci --coverage --maxWorkers=2
        
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: apps/frontend/coverage
          
  build-and-push:
    name: Build and Push Docker Image
    needs: test-and-lint
    runs-on: ubuntu-latest
    environment: AWS
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }}:latest .
          docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          
      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          
      - name: Create deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tags:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.ECR_REPOSITORY }}:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.ECR_REPOSITORY }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> $GITHUB_STEP_SUMMARY